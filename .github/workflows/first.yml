name: Android CI

on:
    #schedule:
    #- cron:  '0 8 * * 1-5'
    #schedule:
          #     Run every 5 mins
          #- cron:  '*/5 * * * *'
          
           #    This example triggers the workflow every day at 5:30 and 17:30 UTC:
           #    * is a special character in YAML so you have to quote this string
           #    - cron:  '30 5,17 * * *'
           
    #push:
    #    branches: [ master ]
    #pull_request:
    #    branches: [ master ]
           
#    workflow_dispatch: 
    workflow_dispatch: # to be able to run action manually 

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@e6e38bacfdf1a337459f332974bb2327a31aaf4b
      - name: Build with Gradle
        run: ./gradlew build
        
  test: 
    name: Run Unit Tests
    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v1
      - name: set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Unit tests
        run: bash ./gradlew test --stacktrace

  apk:
    name: Generate APK
    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v1
      - name: set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Build debug APK
        run: bash ./gradlew assembleDebug --stacktrace
      - name: Upload APK
        uses: actions/upload-artifact@v2
        with:
          name: best-app-ever
          path: app/build/outputs/apk/debug/app-debug.apk
          retention-days: 1
#      - name: Send email
#        uses: dawidd6/action-send-mail@v3
#        with:
            # Required mail server address:
#            server_address: smtp.gmail.com
            # Required mail server port:
#            server_port: 465
            # Optional (recommended): mail server username:
#            username: modestovich9@gmail.com
            # Optional (recommended) mail server password:
#            password: 20ofmarch1993year
            # Required mail subject:
#            subject: Nightly job result
            # Required recipients' addresses:
#            to: modestovich9@gmail.com
            # Required sender full name (address can be skipped):
#            from: Nightly job slave :D # <user@example.com>
            # Optional whether this connection use TLS (default is true if server_port is 465)
#            secure: true
            # Optional plain body:
#            body: Nightly builds result
            # Optional HTML body read from file:
            #html_body: file://README.html
            # Optional carbon copy recipients:
            #cc: kyloren@example.com,leia@example.com
            # Optional blind carbon copy recipients:
            #bcc: r2d2@example.com,hansolo@example.com
            # Optional recipient of the email response:
            #reply_to: luke@example.com
            # Optional unsigned/invalid certificates allowance:
#            ignore_cert: true
            # Optional converting Markdown to HTML (set content_type to text/html too):
            #convert_markdown: true
            # Optional attachments:
#            attachments: best-app-ever
            # Optional priority: 'high', 'normal' (default) or 'low'
#            priority: high



#          echo $(git ls-remote --tags origin | grep v2.0.0.1)
#          existingTagRef=$(git ls-remote --tags origin | grep $tagName)
#          if [ -z "existingTagRef" ]
#          then
#            echo "NO TAG. Pushing new one"
#            $(git tag -a $tagName $commitHash -m "Release version ${tagName:1}")
#            $(git push origin $tagName)
#          else
#            echo "TAG ALREADY EXISTS. Skip"
#          fi